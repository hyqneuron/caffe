
name: "yq_fkpat1"
layer {
  name: "data"
  type: "ImageDataMultLabel"
  top: "data"
  top: "label_pid"
  top: "label_pat"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 82
    mean_value: 187
    mean_value: 176
    mean_value: 176
  }
  image_data_mult_label_param {
    source: "models/yq_fkpat1/patches_train.txt"
    batch_size: 50
    shuffle: true
    use_bbox:true
  }
}
layer {
  name: "data"
  type: "ImageDataMultLabel"
  top: "data"
  top: "label_pid"
  top: "label_pat"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 82
    mean_value: 187
    mean_value: 176
    mean_value: 176
  }
  image_data_mult_label_param {
    source: "models/yq_fkpat1/zeroed_files"
    batch_size: 50
    shuffle: true
    use_bbox:true
  }
}



####conv1####

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 30
    kernel_size:8
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
#layer {
#  name: "norm1"
#  type: "LRN"
#  bottom: "pool1"
#  top: "norm1"
#  lrn_param {
#    local_size: 5
#    alpha: 0.0001
#    beta: 0.75
#  }
#}


####conv2####

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 40
    #pad: 2
    kernel_size: 6
    #group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
#layer {
#  name: "norm2"
#  type: "LRN"
#  bottom: "pool2"
#  top: "norm2"
#  lrn_param {
#    local_size: 5
#    alpha: 0.0001
#    beta: 0.75
#  }
#}

####conv3####

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 60
    #pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}


####conv4####

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 30
    #pad: 1
    kernel_size: 3
    #group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
#layer {
#  name: "pool4"
#  type: "Pooling"
#  bottom: "conv4"
#  top: "pool4"
#  pooling_param {
#    pool: MAX
#    kernel_size: 3
#    stride: 2
#  }
#}
layer {
  name: "fc5"
  type: "InnerProduct"
  bottom: "conv4"
  top: "fc5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "fc5"
  top: "fc5"
}
layer {
  name: "drop5"
  type: "Dropout"
  bottom: "fc5"
  top: "fc5"
  dropout_param {
    dropout_ratio: 0.5
  }
}


####pat####
layer {
  name: "FCend_pat"
  type: "InnerProduct"
  bottom: "fc5"
  top: "FCend_pat"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_pat"
  type: "SoftmaxWithPerClassLoss"
  bottom: "FCend_pat"
  bottom: "label_pat"
  top: "loss_pat"
  top: "prob_pat"
  loss_weight: 1
  loss_weight: 0
  loss_param {
      #ignore_label: 0
      normalize: true
      classifier_info_file: "models/yq_pat1/info_pat.txt"
  }
}
layer {
  name: "accuracy_pat"
  type: "PerClassAccuracy"
  bottom: "prob_pat"
  bottom: "label_pat"
  bottom: "label_pid"
  per_class_accuracy_param {
      #ignore_label: 0
      classifier_info_file: "models/yq_pat1/info_pat.txt"
      confusion_matrix_file: "models/yq_pat1/conf_pat"
      confusion_id_file:  "models/yq_pat1/conf_id_pat"
      probabilities_file: "models/yq_pat1/prob_pat"
  }
}
