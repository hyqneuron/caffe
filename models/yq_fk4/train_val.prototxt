
name: "yq_fk4"
layer {
  name: "data"
  type: "ImageDataMultLabel"
  top: "data"
  top: "label_category"
  top: "label_pattern"
  top: "label_neck"
  top: "label_sleeve"
  top: "label_fit"
  top: "label_ideal_for"
  top: "label_occasion"
  top: "label_embellished"
  top: "label_embroidered"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "data/ilsvrc12/imagenet_mean.binaryproto"
  }
  image_data_mult_label_param {
    source: "/home/ubuntu/images/fk_3sets/generated/train.txt"
    batch_size: 50
    new_height: 256
    new_width: 256
    shuffle: true
  }
}
layer {
  name: "data"
  type: "ImageDataMultLabel"
  top: "data"
  top: "label_category"
  top: "label_pattern"
  top: "label_neck"
  top: "label_sleeve"
  top: "label_fit"
  top: "label_ideal_for"
  top: "label_occasion"
  top: "label_embellished"
  top: "label_embroidered"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "data/ilsvrc12/imagenet_mean.binaryproto"
  }
  image_data_mult_label_param {
    source: "/home/ubuntu/images/fk_3sets/generated/train.txt"
    batch_size: 50
    new_height: 256
    new_width: 256
    shuffle: true
  }
}


layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
####
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  # Note that lr_mult can be set to 0 to disable any fine-tuning of this, and any other, layer
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7-0.5"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7-0.5"
  dropout_param {
    # this is probability of dropout
    # not the probability of retainment
    dropout_ratio: 0.5
  }
}
layer {
  name: "drop7-0.9"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7-0.9"
  dropout_param {
    # drop'em like crazy
    dropout_ratio: 0.9
  }
}



####category####
layer {
  name: "fc8_category"
  type: "InnerProduct"
  bottom: "fc7-0.5"
  top: "fc8_category"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 29
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_category"
  type: "SoftmaxWithPerClassLoss"
  bottom: "fc8_category"
  bottom: "label_category"
  loss_param {
      ignore_label: 0
      normalize: true
      classifier_info_file: "models/yq_fk4/info_category.txt"
  }
}
layer {
  name: "accuracy_category"
  type: "PerClassAccuracy"
  bottom: "fc8_category"
  bottom: "label_category"
  top: "accuracy_category"
  include {
    phase: TEST
  }
  per_class_accuracy_param {
      ignore_label: 0
      classifier_info_file: "models/yq_fk4/info_category.txt"
      confusion_matrix_file: "models/yq_fk4/conf_category"
  }
}



####pattern####
layer {
  name: "fc8_pattern"
  type: "InnerProduct"
  bottom: "fc7-0.5"
  top: "fc8_pattern"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 14
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_pattern"
  type: "SoftmaxWithPerClassLoss"
  bottom: "fc8_pattern"
  bottom: "label_pattern"
  loss_param {
      ignore_label: 0
      normalize: true
      classifier_info_file: "models/yq_fk4/info_pattern.txt"
  }
}
layer {
  name: "accuracy_pattern"
  type: "PerClassAccuracy"
  bottom: "fc8_pattern"
  bottom: "label_pattern"
  top: "accuracy_pattern"
  include {
    phase: TEST
  }
  per_class_accuracy_param {
      ignore_label: 0
      classifier_info_file: "models/yq_fk4/info_pattern.txt"
      confusion_matrix_file: "models/yq_fk4/conf_pattern"
  }
}



####neck####
layer {
  name: "fc8_neck"
  type: "InnerProduct"
  bottom: "fc7-0.9"
  top: "fc8_neck"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 11
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_neck"
  type: "SoftmaxWithPerClassLoss"
  bottom: "fc8_neck"
  bottom: "label_neck"
  loss_param {
      ignore_label: 0
      normalize: true
      classifier_info_file: "models/yq_fk4/info_neck.txt"
  }
}
layer {
  name: "accuracy_neck"
  type: "PerClassAccuracy"
  bottom: "fc8_neck"
  bottom: "label_neck"
  top: "accuracy_neck"
  include {
    phase: TEST
  }
  per_class_accuracy_param {
      ignore_label: 0
      classifier_info_file: "models/yq_fk4/info_neck.txt"
      confusion_matrix_file: "models/yq_fk4/conf_neck"
  }
}



####sleeve####
layer {
  name: "fc8_sleeve"
  type: "InnerProduct"
  bottom: "fc7-0.5"
  top: "fc8_sleeve"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 7
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_sleeve"
  type: "SoftmaxWithPerClassLoss"
  bottom: "fc8_sleeve"
  bottom: "label_sleeve"
  loss_param {
      ignore_label: 0
      normalize: true
      classifier_info_file: "models/yq_fk4/info_sleeve.txt"
  }
}
layer {
  name: "accuracy_sleeve"
  type: "PerClassAccuracy"
  bottom: "fc8_sleeve"
  bottom: "label_sleeve"
  top: "accuracy_sleeve"
  include {
    phase: TEST
  }
  per_class_accuracy_param {
      ignore_label: 0
      classifier_info_file: "models/yq_fk4/info_sleeve.txt"
      confusion_matrix_file: "models/yq_fk4/conf_sleeve"
  }
}



####fit####
layer {
  name: "fc8_fit"
  type: "InnerProduct"
  bottom: "fc7-0.9"
  top: "fc8_fit"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 6
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_fit"
  type: "SoftmaxWithPerClassLoss"
  bottom: "fc8_fit"
  bottom: "label_fit"
  loss_param {
      ignore_label: 0
      normalize: true
      classifier_info_file: "models/yq_fk4/info_fit.txt"
  }
}
layer {
  name: "accuracy_fit"
  type: "PerClassAccuracy"
  bottom: "fc8_fit"
  bottom: "label_fit"
  top: "accuracy_fit"
  include {
    phase: TEST
  }
  per_class_accuracy_param {
      ignore_label: 0
      classifier_info_file: "models/yq_fk4/info_fit.txt"
      confusion_matrix_file: "models/yq_fk4/conf_fit"
  }
}



####ideal_for####
layer {
  name: "fc8_ideal_for"
  type: "InnerProduct"
  bottom: "fc7-0.5"
  top: "fc8_ideal_for"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_ideal_for"
  type: "SoftmaxWithPerClassLoss"
  bottom: "fc8_ideal_for"
  bottom: "label_ideal_for"
  loss_param {
      ignore_label: 0
      normalize: true
      classifier_info_file: "models/yq_fk4/info_ideal_for.txt"
  }
}
layer {
  name: "accuracy_ideal_for"
  type: "PerClassAccuracy"
  bottom: "fc8_ideal_for"
  bottom: "label_ideal_for"
  top: "accuracy_ideal_for"
  include {
    phase: TEST
  }
  per_class_accuracy_param {
      ignore_label: 0
      classifier_info_file: "models/yq_fk4/info_ideal_for.txt"
      confusion_matrix_file: "models/yq_fk4/conf_ideal_for"
  }
}



####occasion####
layer {
  name: "fc8_occasion"
  type: "InnerProduct"
  bottom: "fc7-0.5"
  top: "fc8_occasion"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_occasion"
  type: "SoftmaxWithPerClassLoss"
  bottom: "fc8_occasion"
  bottom: "label_occasion"
  loss_param {
      ignore_label: 0
      normalize: true
      classifier_info_file: "models/yq_fk4/info_occasion.txt"
  }
}
layer {
  name: "accuracy_occasion"
  type: "PerClassAccuracy"
  bottom: "fc8_occasion"
  bottom: "label_occasion"
  top: "accuracy_occasion"
  include {
    phase: TEST
  }
  per_class_accuracy_param {
      ignore_label: 0
      classifier_info_file: "models/yq_fk4/info_occasion.txt"
      confusion_matrix_file: "models/yq_fk4/conf_occasion"
  }
}



####embellished####
layer {
  name: "fc8_embellished"
  type: "InnerProduct"
  bottom: "fc7-0.5"
  top: "fc8_embellished"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_embellished"
  type: "SoftmaxWithPerClassLoss"
  bottom: "fc8_embellished"
  bottom: "label_embellished"
  loss_param {
      ignore_label: 0
      normalize: true
      classifier_info_file: "models/yq_fk4/info_embellished.txt"
  }
}
layer {
  name: "accuracy_embellished"
  type: "PerClassAccuracy"
  bottom: "fc8_embellished"
  bottom: "label_embellished"
  top: "accuracy_embellished"
  include {
    phase: TEST
  }
  per_class_accuracy_param {
      ignore_label: 0
      classifier_info_file: "models/yq_fk4/info_embellished.txt"
      confusion_matrix_file: "models/yq_fk4/conf_embellished"
  }
}



####embroidered####
layer {
  name: "fc8_embroidered"
  type: "InnerProduct"
  bottom: "fc7-0.5"
  top: "fc8_embroidered"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_embroidered"
  type: "SoftmaxWithPerClassLoss"
  bottom: "fc8_embroidered"
  bottom: "label_embroidered"
  loss_param {
      ignore_label: 0
      normalize: true
      classifier_info_file: "models/yq_fk4/info_embroidered.txt"
  }
}
layer {
  name: "accuracy_embroidered"
  type: "PerClassAccuracy"
  bottom: "fc8_embroidered"
  bottom: "label_embroidered"
  top: "accuracy_embroidered"
  include {
    phase: TEST
  }
  per_class_accuracy_param {
      ignore_label: 0
      classifier_info_file: "models/yq_fk4/info_embroidered.txt"
      confusion_matrix_file: "models/yq_fk4/conf_embroidered"
  }
}
